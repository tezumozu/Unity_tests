@startuml ゲーマネージャ
class GameManager <<SingletonMonobehaviour>>{
    - UniTask initAsync
    - E_GameScene currentScene
    - Dictionary<E_GameScene,SceneObjectManager> secneManagerList
    - E_GameState currentGameState
    - InputManager inputManager
    - SceneLoader sceneLoader

    - void Start()
    - void Update()
    + override void OnInitialize()

}


abstract class GameModeManager {
    - Dictionary<E_GameMode,GameMode> gameModeList
    - E_GameMode currentGameMode

    + virtual GameMode GetCurrentGameMode()
    + abstract void SceneInit()
    - abstract void changeGameMode(E_GameMode)
}

class hogehogeScene{

    + void changeGameMode(E_GameMode)
    + void SceneInit()
}


abstract class GameMode{
    - List<InputMode> InputModeList
    -List<I_ObjectUpdatable> objectList
    -List<I_ObjectUpdatable> managerList
    -List<I_ObjectUpdatable> UIList
    - bool isActive
    - Subject<E_GameMode> changeGameModeSubject
    + bool IsFinished {get; protected set;}
    + E_GameScene GetNextScene {get; protected set;}

    + abstract void ObjectInit()
    + abstract void ObjectRelease()
    + abstract void UIUpdate(InputData[] inputs)
    + abstract void ManagerUpdate(InputData[] inputs)
    + abstract void ObjectUpdate()
    + abstract void PlayerUpdate(InputData[] inputs)

    + virtual void SetLoadingActive(bool flag)
    + virtual void SetActive(bool flag)
    + virtual void SubscriveChangeGameMode(Action<E_GameMode> method)
}

class hogehogeMode{
    + void UIUpdate(InputData[] inputs)
    + void ObjectInit()
    + void ObjectRelease()
    + void ManagerUpdate(InputData[] inputs)

    + void PlayerUpdate(InputData[] inputs)
    + void ObjectUpdate()
    + void SetLoadingActive(bool flag)
    + virtual void SetActive(bool flag)
    + virtual void SubscriveChangeGameMode(Action<E_GameMode> method)


}

interface I_ObjectUpdatable {
    + void ObjectUpdate ()
    + void ObjectInit ()
}

class SceneLoader{
    - static Subject<E_Scene> sceneSubject

    + static void SubscriveManager(Action method)
    + IEnumerator loadScene()
}

enum E_GameScene{

}

enum E_GameState{

}


GameManager *-left-> SceneLoader : Obseveb
GameManager -right-> GameMode : Update
GameManager o--> GameModeManager

GameModeManager o-right- GameMode
hogehogeScene <|-right- GameModeManager

GameMode o--> I_ObjectUpdatable
hogehogeMode <|-left- I_ObjectUpdatable
@enduml